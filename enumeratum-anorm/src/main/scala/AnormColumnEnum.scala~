package enumeratum

import anorm.{Column, TypeDoesNotMatch}

trait AnormColumnEnum[A <: EnumEntry] { self: Enum[A] =>
  private def parse(enum: Enum[A])(extract: String => Option[A]): Column[A] =
    Column[A] {
      case (s: String, _) =>
        extract(s) match {
          case Some(result) => Right(result)
          case None         => Left(TypeDoesNotMatch(s"Invalid value: $s"))
        }

      case (_, meta) =>
        Left(
          TypeDoesNotMatch(
            s"Column '${meta.column.qualified}' expected to be String; Found ${meta.clazz}"))
    }
}
